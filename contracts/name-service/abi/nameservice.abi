{
    "methods": {
        "mint": {
            "argument": "nameservice.mint_arguments",
            "return": "nameservice.empty_object",
            "description": "Mint a name or TLA",
            "entry-point": "0xdc6f17bb",
            "read-only": false
        },
        "burn": {
            "argument": "nameservice.burn_arguments",
            "return": "nameservice.empty_object",
            "description": "Burn a name or TLA",
            "entry-point": "0x859facc5",
            "read-only": false
        },
        "transfer": {
            "argument": "nameservice.transfer_arguments",
            "return": "nameservice.empty_object",
            "description": "Transfer ownership of a name or TLA",
            "entry-point": "0x27f576ca",
            "read-only": false
        },
        "renew": {
            "argument": "nameservice.renew_arguments",
            "return": "nameservice.empty_object",
            "description": "Renew a name",
            "entry-point": "0xa36a2ce1",
            "read-only": false
        },
        "get_name": {
            "argument": "nameservice.get_name_arguments",
            "return": "nameservice.name_object",
            "description": "Get name object",
            "entry-point": "0xe5070a16",
            "read-only": true
        },
        "get_names": {
            "argument": "nameservice.get_names_arguments",
            "return": "nameservice.get_names_result",
            "description": "Get names that belong to an address",
            "entry-point": "0xcd5c6518",
            "read-only": true
        },
        "set_metadata": {
            "argument": "nameservice.set_metadata_arguments",
            "return": "nameservice.empty_object",
            "description": "Set contract metadata",
            "entry-point": "0x3d59af19",
            "read-only": false
        },
        "get_metadata": {
            "argument": "nameservice.get_metadata_arguments",
            "return": "nameservice.metadata_object",
            "description": "Get contract metadata",
            "entry-point": "0xfcf7a68f",
            "read-only": true
        }
    },
    "types": "CtQSCiBhc3NlbWJseS9wcm90by9uYW1lc2VydmljZS5wcm90bxILbmFtZXNlcnZpY2UaFGtvaW5vcy9vcHRpb25zLnByb3RvItQBCg5taW50X2FyZ3VtZW50cxISCgRuYW1lGAEgASgJUgRuYW1lEi8KE2R1cmF0aW9uX2luY3JlbWVudHMYAiABKA1SEmR1cmF0aW9uSW5jcmVtZW50cxIaCgVvd25lchgDIAEoDEIEgLUYBlIFb3duZXISJwoMcGF5bWVudF9mcm9tGAQgASgMQgSAtRgGUgtwYXltZW50RnJvbRI4ChVwYXltZW50X3Rva2VuX2FkZHJlc3MYBSABKAxCBIC1GAVSE3BheW1lbnRUb2tlbkFkZHJlc3MiJAoOYnVybl9hcmd1bWVudHMSEgoEbmFtZRgBIAEoCVIEbmFtZSI+ChJ0cmFuc2Zlcl9hcmd1bWVudHMSEgoEbmFtZRgBIAEoCVIEbmFtZRIUCgJ0bxgCIAEoDEIEgLUYBlICdG8iuQEKD3JlbmV3X2FyZ3VtZW50cxISCgRuYW1lGAEgASgJUgRuYW1lEi8KE2R1cmF0aW9uX2luY3JlbWVudHMYAiABKA1SEmR1cmF0aW9uSW5jcmVtZW50cxInCgxwYXltZW50X2Zyb20YAyABKAxCBIC1GAZSC3BheW1lbnRGcm9tEjgKFXBheW1lbnRfdG9rZW5fYWRkcmVzcxgEIAEoDEIEgLUYBVITcGF5bWVudFRva2VuQWRkcmVzcyIoChJnZXRfbmFtZV9hcmd1bWVudHMSEgoEbmFtZRgBIAEoCVIEbmFtZSKNAQoTZ2V0X25hbWVzX2FyZ3VtZW50cxIaCgVvd25lchgBIAEoDEIEgLUYBlIFb3duZXISHwoLbmFtZV9vZmZzZXQYAiABKAlSCm5hbWVPZmZzZXQSIwoNZG9tYWluX29mZnNldBgDIAEoCVIMZG9tYWluT2Zmc2V0EhQKBWxpbWl0GAQgASgNUgVsaW1pdCJCChBnZXRfbmFtZXNfcmVzdWx0Ei4KBW5hbWVzGAEgAygLMhgubmFtZXNlcnZpY2UubmFtZV9vYmplY3RSBW5hbWVzImwKFnNldF9tZXRhZGF0YV9hcmd1bWVudHMSIAoMdGxhX21pbnRfZmVlGAEgASgEUgp0bGFNaW50RmVlEjAKEWthcF90b2tlbl9hZGRyZXNzGAIgASgMQgSAtRgFUg9rYXBUb2tlbkFkZHJlc3MiGAoWZ2V0X21ldGFkYXRhX2FyZ3VtZW50cyIOCgxlbXB0eV9vYmplY3QiZQoPbWV0YWRhdGFfb2JqZWN0EiAKDHRsYV9taW50X2ZlZRgBIAEoBFIKdGxhTWludEZlZRIwChFrYXBfdG9rZW5fYWRkcmVzcxgCIAEoDEIEgLUYBVIPa2FwVG9rZW5BZGRyZXNzIoMCCgtuYW1lX29iamVjdBIWCgZkb21haW4YASABKAlSBmRvbWFpbhISCgRuYW1lGAIgASgJUgRuYW1lEhoKBW93bmVyGAMgASgMQgSAtRgGUgVvd25lchIiCgpleHBpcmF0aW9uGAQgASgEQgIwAVIKZXhwaXJhdGlvbhIsChBncmFjZV9wZXJpb2RfZW5kGAUgASgEQgIwAVIOZ3JhY2VQZXJpb2RFbmQSKgoPc3ViX25hbWVzX2NvdW50GAYgASgEQgIwAVINc3ViTmFtZXNDb3VudBIuChFsb2NrZWRfa2FwX3Rva2VucxgHIAEoBEICMAFSD2xvY2tlZEthcFRva2VucyIxCg5hZGRyZXNzX29iamVjdBIfCgtuYW1lc19jb3VudBgBIAEoBFIKbmFtZXNDb3VudCJGCgthZGRyZXNzX2tleRIaCgVvd25lchgBIAEoDEIEgLUYBlIFb3duZXISGwoJbmFtZV9oYXNoGAIgASgMUghuYW1lSGFzaCLxAQoTYXV0aG9yaXplX21pbnRfYXJncxISCgRuYW1lGAEgASgJUgRuYW1lEhYKBmRvbWFpbhgCIAEoCVIGZG9tYWluEi8KE2R1cmF0aW9uX2luY3JlbWVudHMYAyABKA1SEmR1cmF0aW9uSW5jcmVtZW50cxIaCgVvd25lchgEIAEoDEIEgLUYBlIFb3duZXISJwoMcGF5bWVudF9mcm9tGAUgASgMQgSAtRgGUgtwYXltZW50RnJvbRI4ChVwYXltZW50X3Rva2VuX2FkZHJlc3MYBiABKAxCBIC1GAVSE3BheW1lbnRUb2tlbkFkZHJlc3MiXgoSYXV0aG9yaXplX21pbnRfcmVzEh4KCmV4cGlyYXRpb24YASABKARSCmV4cGlyYXRpb24SKAoQZ3JhY2VfcGVyaW9kX2VuZBgCIAEoBFIOZ3JhY2VQZXJpb2RFbmQiQwoTYXV0aG9yaXplX2J1cm5fYXJncxIsCgRuYW1lGAEgASgLMhgubmFtZXNlcnZpY2UubmFtZV9vYmplY3RSBG5hbWUiNAoSYXV0aG9yaXplX2J1cm5fcmVzEh4KCmF1dGhvcml6ZWQYASABKAhSCmF1dGhvcml6ZWQi2gEKFmF1dGhvcml6ZV9yZW5ld2FsX2FyZ3MSLAoEbmFtZRgBIAEoCzIYLm5hbWVzZXJ2aWNlLm5hbWVfb2JqZWN0UgRuYW1lEi8KE2R1cmF0aW9uX2luY3JlbWVudHMYAiABKA1SEmR1cmF0aW9uSW5jcmVtZW50cxInCgxwYXltZW50X2Zyb20YAyABKAxCBIC1GAZSC3BheW1lbnRGcm9tEjgKFXBheW1lbnRfdG9rZW5fYWRkcmVzcxgEIAEoDEIEgLUYBVITcGF5bWVudFRva2VuQWRkcmVzcyJhChVhdXRob3JpemVfcmVuZXdhbF9yZXMSHgoKZXhwaXJhdGlvbhgBIAEoBFIKZXhwaXJhdGlvbhIoChBncmFjZV9wZXJpb2RfZW5kGAIgASgEUg5ncmFjZVBlcmlvZEVuZCJGChZhdXRob3JpemVfcmVjbGFpbV9hcmdzEiwKBG5hbWUYASABKAsyGC5uYW1lc2VydmljZS5uYW1lX29iamVjdFIEbmFtZSI3ChVhdXRob3JpemVfcmVjbGFpbV9yZXMSHgoKYXV0aG9yaXplZBgBIAEoCFIKYXV0aG9yaXplZGIGcHJvdG8z"
}