{
    "methods": {
        "mint": {
            "argument": "nameservice.mint_arguments",
            "return": "nameservice.empty_object",
            "description": "Mint a name or TLA",
            "entry-point": "0xdc6f17bb",
            "read-only": false
        },
        "burn": {
            "argument": "nameservice.burn_arguments",
            "return": "nameservice.empty_object",
            "description": "Burn a name or TLA",
            "entry-point": "0x859facc5",
            "read-only": false
        },
        "transfer": {
            "argument": "nameservice.transfer_arguments",
            "return": "nameservice.empty_object",
            "description": "Transfer ownership of a name or TLA",
            "entry-point": "0x27f576ca",
            "read-only": false
        },
        "renew": {
            "argument": "nameservice.renew_arguments",
            "return": "nameservice.empty_object",
            "description": "Renew a name",
            "entry-point": "0xa36a2ce1",
            "read-only": false
        },
        "get_name": {
            "argument": "nameservice.get_name_arguments",
            "return": "nameservice.get_name_result",
            "description": "Get name object",
            "entry-point": "0xe5070a16",
            "read-only": true
        },
        "get_names": {
            "argument": "nameservice.get_names_arguments",
            "return": "nameservice.get_names_result",
            "description": "Get names that belong to an address",
            "entry-point": "0xcd5c6518",
            "read-only": true
        },
        "get_metadata": {
            "argument": "nameservice.get_metadata_arguments",
            "return": "nameservice.metadata_object",
            "description": "Get contract metadata",
            "entry-point": "0xfcf7a68f",
            "read-only": true
        }
    },
    "types": "CrISCiBhc3NlbWJseS9wcm90by9uYW1lc2VydmljZS5wcm90bxILbmFtZXNlcnZpY2UaFGtvaW5vcy9vcHRpb25zLnByb3RvItQBCg5taW50X2FyZ3VtZW50cxISCgRuYW1lGAEgASgJUgRuYW1lEi8KE2R1cmF0aW9uX2luY3JlbWVudHMYAiABKA1SEmR1cmF0aW9uSW5jcmVtZW50cxIaCgVvd25lchgDIAEoDEIEgLUYBlIFb3duZXISJwoMcGF5bWVudF9mcm9tGAQgASgMQgSAtRgGUgtwYXltZW50RnJvbRI4ChVwYXltZW50X3Rva2VuX2FkZHJlc3MYBSABKAxCBIC1GAVSE3BheW1lbnRUb2tlbkFkZHJlc3MiJAoOYnVybl9hcmd1bWVudHMSEgoEbmFtZRgBIAEoCVIEbmFtZSI+ChJ0cmFuc2Zlcl9hcmd1bWVudHMSEgoEbmFtZRgBIAEoCVIEbmFtZRIUCgJ0bxgCIAEoDEIEgLUYBlICdG8iuQEKD3JlbmV3X2FyZ3VtZW50cxISCgRuYW1lGAEgASgJUgRuYW1lEi8KE2R1cmF0aW9uX2luY3JlbWVudHMYAiABKA1SEmR1cmF0aW9uSW5jcmVtZW50cxInCgxwYXltZW50X2Zyb20YAyABKAxCBIC1GAZSC3BheW1lbnRGcm9tEjgKFXBheW1lbnRfdG9rZW5fYWRkcmVzcxgEIAEoDEIEgLUYBVITcGF5bWVudFRva2VuQWRkcmVzcyIoChJnZXRfbmFtZV9hcmd1bWVudHMSEgoEbmFtZRgBIAEoCVIEbmFtZSKkAgoPZ2V0X25hbWVfcmVzdWx0EhYKBmRvbWFpbhgBIAEoCVIGZG9tYWluEhIKBG5hbWUYAiABKAlSBG5hbWUSGgoFb3duZXIYAyABKAxCBIC1GAZSBW93bmVyEiIKCmV4cGlyYXRpb24YBCABKARCAjABUgpleHBpcmF0aW9uEioKD3N1Yl9uYW1lc19jb3VudBgFIAEoBEICMAFSDXN1Yk5hbWVzQ291bnQSLgoRbG9ja2VkX2thcF90b2tlbnMYBiABKARCAjABUg9sb2NrZWRLYXBUb2tlbnMSHwoLaGFzX2V4cGlyZWQYByABKAhSCmhhc0V4cGlyZWQSKAoQY2FuX2JlX3JlY2xhaW1lZBgIIAEoCFIOY2FuQmVSZWNsYWltZWQiMQoTZ2V0X25hbWVzX2FyZ3VtZW50cxIaCgVvd25lchgBIAEoDEIEgLUYBlIFb3duZXIiRgoQZ2V0X25hbWVzX3Jlc3VsdBIyCgVuYW1lcxgBIAMoCzIcLm5hbWVzZXJ2aWNlLmdldF9uYW1lX3Jlc3VsdFIFbmFtZXMiGAoWZ2V0X21ldGFkYXRhX2FyZ3VtZW50cyIOCgxlbXB0eV9vYmplY3QiZQoPbWV0YWRhdGFfb2JqZWN0EiAKDHRsYV9taW50X2ZlZRgBIAEoBFIKdGxhTWludEZlZRIwChFrYXBfdG9rZW5fYWRkcmVzcxgCIAEoDEIEgLUYBVIPa2FwVG9rZW5BZGRyZXNzItUBCgtuYW1lX29iamVjdBIWCgZkb21haW4YASABKAlSBmRvbWFpbhISCgRuYW1lGAIgASgJUgRuYW1lEhoKBW93bmVyGAMgASgMQgSAtRgGUgVvd25lchIiCgpleHBpcmF0aW9uGAQgASgEQgIwAVIKZXhwaXJhdGlvbhIqCg9zdWJfbmFtZXNfY291bnQYBSABKARCAjABUg1zdWJOYW1lc0NvdW50Ei4KEWxvY2tlZF9rYXBfdG9rZW5zGAYgASgEQgIwAVIPbG9ja2VkS2FwVG9rZW5zIjEKDmFkZHJlc3Nfb2JqZWN0Eh8KC25hbWVzX2NvdW50GAEgASgEUgpuYW1lc0NvdW50IkYKC2FkZHJlc3Nfa2V5EhoKBW93bmVyGAEgASgMQgSAtRgGUgVvd25lchIbCgluYW1lX2hhc2gYAiABKAxSCG5hbWVIYXNoIvEBChNhdXRob3JpemVfbWludF9hcmdzEhIKBG5hbWUYASABKAlSBG5hbWUSFgoGZG9tYWluGAIgASgJUgZkb21haW4SLwoTZHVyYXRpb25faW5jcmVtZW50cxgDIAEoDVISZHVyYXRpb25JbmNyZW1lbnRzEhoKBW93bmVyGAQgASgMQgSAtRgGUgVvd25lchInCgxwYXltZW50X2Zyb20YBSABKAxCBIC1GAZSC3BheW1lbnRGcm9tEjgKFXBheW1lbnRfdG9rZW5fYWRkcmVzcxgGIAEoDEIEgLUYBVITcGF5bWVudFRva2VuQWRkcmVzcyI0ChJhdXRob3JpemVfbWludF9yZXMSHgoKZXhwaXJhdGlvbhgBIAEoBFIKZXhwaXJhdGlvbiJDChNhdXRob3JpemVfYnVybl9hcmdzEiwKBG5hbWUYASABKAsyGC5uYW1lc2VydmljZS5uYW1lX29iamVjdFIEbmFtZSI0ChJhdXRob3JpemVfYnVybl9yZXMSHgoKYXV0aG9yaXplZBgBIAEoCFIKYXV0aG9yaXplZCLaAQoWYXV0aG9yaXplX3JlbmV3YWxfYXJncxIsCgRuYW1lGAEgASgLMhgubmFtZXNlcnZpY2UubmFtZV9vYmplY3RSBG5hbWUSLwoTZHVyYXRpb25faW5jcmVtZW50cxgCIAEoDVISZHVyYXRpb25JbmNyZW1lbnRzEicKDHBheW1lbnRfZnJvbRgDIAEoDEIEgLUYBlILcGF5bWVudEZyb20SOAoVcGF5bWVudF90b2tlbl9hZGRyZXNzGAQgASgMQgSAtRgFUhNwYXltZW50VG9rZW5BZGRyZXNzIjcKFWF1dGhvcml6ZV9yZW5ld2FsX3JlcxIeCgpleHBpcmF0aW9uGAEgASgEUgpleHBpcmF0aW9uIkYKFmF1dGhvcml6ZV9yZWNsYWltX2FyZ3MSLAoEbmFtZRgBIAEoCzIYLm5hbWVzZXJ2aWNlLm5hbWVfb2JqZWN0UgRuYW1lIjcKFWF1dGhvcml6ZV9yZWNsYWltX3JlcxIeCgphdXRob3JpemVkGAEgASgIUgphdXRob3JpemVkYgZwcm90bzM="
}