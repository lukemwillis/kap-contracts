{
    "methods": {
        "name": {
            "argument": "collections.name_arguments",
            "return": "collections.string_object",
            "description": "Returns the token's name",
            "entry-point": "0x82a3537f",
            "read-only": true
        },
        "symbol": {
            "argument": "collections.symbol_arguments",
            "return": "collections.string_object",
            "description": "Returns the token's symbol",
            "entry-point": "0xb76a7ca1",
            "read-only": true
        },
        "uri": {
            "argument": "collections.uri_arguments",
            "return": "collections.string_object",
            "description": "Returns the token's uri",
            "entry-point": "0x70e5d7b6",
            "read-only": true
        },
        "total_supply": {
            "argument": "collections.total_supply_arguments",
            "return": "collections.uint64_object",
            "description": "Gets the total number of minted tokens",
            "entry-point": "0xb0da3934",
            "read-only": true
        },
        "royalties": {
            "argument": "collections.royalties_arguments",
            "return": "collections.royalties_result",
            "description": "Returns collection royalties",
            "entry-point": "0x36e90cd0",
            "read-only": true
        },
        "set_royalties": {
            "argument": "collections.set_royalties_arguments",
            "return": "collections.empty_object",
            "description": "Unsupported",
            "entry-point": "0x3b5bb56b",
            "read-only": false
        },
        "owner": {
            "argument": "collections.owner_arguments",
            "return": "collections.bytes_address_object",
            "description": "Returns collection owner",
            "entry-point": "0x4c102969",
            "read-only": true
        },
        "transfer_ownership": {
            "argument": "collections.transfer_ownership_arguments",
            "return": "collections.empty_object",
            "description": "Transfer ownership of the contract",
            "entry-point": "0x394be702",
            "read-only": false
        },
        "balance_of": {
            "argument": "collections.balance_of_arguments",
            "return": "collections.uint64_object",
            "description": "Gets the balance of an owner",
            "entry-point": "0x5c721497",
            "read-only": true
        },
        "owner_of": {
            "argument": "collections.owner_of_arguments",
            "return": "collections.bytes_address_object",
            "description": "Gets the owner of a name",
            "entry-point": "0xed61c847",
            "read-only": true
        },
        "get_approved": {
            "argument": "collections.get_approved_arguments",
            "return": "collections.bytes_address_object",
            "description": "Gets approved address for a token",
            "entry-point": "0x4c731020",
            "read-only": true
        },
        "is_approved_for_all": {
            "argument": "collections.is_approved_for_all_arguments",
            "return": "collections.bool_object",
            "description": "Checks if an operator is approved by an owner",
            "entry-point": "0xe7ab8ce5",
            "read-only": true
        },
        "mint": {
            "argument": "collections.mint_arguments",
            "return": "collections.empty_object",
            "description": "Mint a name or TLA",
            "entry-point": "0xdc6f17bb",
            "read-only": false
        },
        "burn": {
            "argument": "collections.burn_arguments",
            "return": "collections.empty_object",
            "description": "Burn a name or TLA",
            "entry-point": "0x859facc5",
            "read-only": false
        },
        "transfer": {
            "argument": "collections.transfer_arguments",
            "return": "collections.empty_object",
            "description": "Transfer ownership of a name or TLA",
            "entry-point": "0x27f576ca",
            "read-only": false
        },
        "approve": {
            "argument": "collections.approve_arguments",
            "return": "collections.empty_object",
            "description": "Approves an address to transfer a token",
            "entry-point": "0x74e21680",
            "read-only": false
        },
        "set_approval_for_all": {
            "argument": "collections.set_approval_for_all_arguments",
            "return": "collections.empty_object",
            "description": "Approves or revokes an address to operate on all tokens owned by caller",
            "entry-point": "0x20442216",
            "read-only": false
        },
        "renew": {
            "argument": "collections.renew_arguments",
            "return": "collections.empty_object",
            "description": "Renew a name",
            "entry-point": "0xa36a2ce1",
            "read-only": false
        },
        "get_name": {
            "argument": "collections.get_name_arguments",
            "return": "collections.name_object",
            "description": "Get name object",
            "entry-point": "0xe5070a16",
            "read-only": true
        },
        "get_names": {
            "argument": "collections.get_names_arguments",
            "return": "collections.get_names_result",
            "description": "Get names that belong to an address",
            "entry-point": "0xcd5c6518",
            "read-only": true
        },
        "set_metadata": {
            "argument": "collections.set_metadata_arguments",
            "return": "collections.empty_object",
            "description": "Set contract metadata",
            "entry-point": "0x3d59af19",
            "read-only": false
        },
        "get_metadata": {
            "argument": "collections.get_metadata_arguments",
            "return": "collections.metadata_object",
            "description": "Get contract metadata",
            "entry-point": "0xfcf7a68f",
            "read-only": true
        }
    },
    "types": "Ct4iCiBhc3NlbWJseS9wcm90by9jb2xsZWN0aW9ucy5wcm90bxILY29sbGVjdGlvbnMaFGtvaW5vcy9vcHRpb25zLnByb3RvIhAKDm5hbWVfYXJndW1lbnRzIhIKEHN5bWJvbF9hcmd1bWVudHMiDwoNdXJpX2FyZ3VtZW50cyIYChZ0b3RhbF9zdXBwbHlfYXJndW1lbnRzIhUKE3JveWFsdGllc19hcmd1bWVudHMiRQoQcm95YWx0aWVzX3Jlc3VsdBIxCgV2YWx1ZRgBIAMoCzIbLmNvbGxlY3Rpb25zLnJveWFsdHlfb2JqZWN0UgV2YWx1ZSJMChdzZXRfcm95YWx0aWVzX2FyZ3VtZW50cxIxCgV2YWx1ZRgBIAMoCzIbLmNvbGxlY3Rpb25zLnJveWFsdHlfb2JqZWN0UgV2YWx1ZSIRCg9vd25lcl9hcmd1bWVudHMiOgocdHJhbnNmZXJfb3duZXJzaGlwX2FyZ3VtZW50cxIaCgVvd25lchgBIAEoDEIEgLUYBlIFb3duZXIiMgoUYmFsYW5jZV9vZl9hcmd1bWVudHMSGgoFb3duZXIYASABKAxCBIC1GAZSBW93bmVyIjUKEm93bmVyX29mX2FyZ3VtZW50cxIfCgh0b2tlbl9pZBgBIAEoDEIEgLUYAlIHdG9rZW5JZCI5ChZnZXRfYXBwcm92ZWRfYXJndW1lbnRzEh8KCHRva2VuX2lkGAEgASgMQgSAtRgCUgd0b2tlbklkIl0KHWlzX2FwcHJvdmVkX2Zvcl9hbGxfYXJndW1lbnRzEhoKBW93bmVyGAEgASgMQgSAtRgGUgVvd25lchIgCghvcGVyYXRvchgCIAEoDEIEgLUYBlIIb3BlcmF0b3Ii8wEKDm1pbnRfYXJndW1lbnRzEhIKBG5hbWUYASABKAlSBG5hbWUSLwoTZHVyYXRpb25faW5jcmVtZW50cxgCIAEoDVISZHVyYXRpb25JbmNyZW1lbnRzEhoKBW93bmVyGAMgASgMQgSAtRgGUgVvd25lchInCgxwYXltZW50X2Zyb20YBCABKAxCBIC1GAZSC3BheW1lbnRGcm9tEjgKFXBheW1lbnRfdG9rZW5fYWRkcmVzcxgFIAEoDEIEgLUYBVITcGF5bWVudFRva2VuQWRkcmVzcxIdCgpwcm9tb19jb2RlGAYgASgJUglwcm9tb0NvZGUiSwoOYnVybl9hcmd1bWVudHMSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIfCgh0b2tlbl9pZBgCIAEoDEIEgLUYAlIHdG9rZW5JZCJlChJ0cmFuc2Zlcl9hcmd1bWVudHMSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIUCgJ0bxgCIAEoDEIEgLUYBlICdG8SHwoIdG9rZW5faWQYAyABKAxCBIC1GAJSB3Rva2VuSWQiewoRYXBwcm92ZV9hcmd1bWVudHMSLwoQYXBwcm92ZXJfYWRkcmVzcxgBIAEoDEIEgLUYBlIPYXBwcm92ZXJBZGRyZXNzEhQKAnRvGAIgASgMQgSAtRgGUgJ0bxIfCgh0b2tlbl9pZBgDIAEoDEIEgLUYAlIHdG9rZW5JZCKeAQoec2V0X2FwcHJvdmFsX2Zvcl9hbGxfYXJndW1lbnRzEi8KEGFwcHJvdmVyX2FkZHJlc3MYASABKAxCBIC1GAZSD2FwcHJvdmVyQWRkcmVzcxIvChBvcGVyYXRvcl9hZGRyZXNzGAIgASgMQgSAtRgGUg9vcGVyYXRvckFkZHJlc3MSGgoIYXBwcm92ZWQYAyABKAhSCGFwcHJvdmVkIrkBCg9yZW5ld19hcmd1bWVudHMSEgoEbmFtZRgBIAEoCVIEbmFtZRIvChNkdXJhdGlvbl9pbmNyZW1lbnRzGAIgASgNUhJkdXJhdGlvbkluY3JlbWVudHMSJwoMcGF5bWVudF9mcm9tGAMgASgMQgSAtRgGUgtwYXltZW50RnJvbRI4ChVwYXltZW50X3Rva2VuX2FkZHJlc3MYBCABKAxCBIC1GAVSE3BheW1lbnRUb2tlbkFkZHJlc3MiKAoSZ2V0X25hbWVfYXJndW1lbnRzEhIKBG5hbWUYASABKAlSBG5hbWUijAEKE2dldF9uYW1lc19hcmd1bWVudHMSGgoFb3duZXIYASABKAxCBIC1GAZSBW93bmVyEh8KC25hbWVfb2Zmc2V0GAIgASgJUgpuYW1lT2Zmc2V0EhgKBWxpbWl0GAMgASgEQgIwAVIFbGltaXQSHgoKZGVzY2VuZGluZxgEIAEoCFIKZGVzY2VuZGluZyJCChBnZXRfbmFtZXNfcmVzdWx0Ei4KBW5hbWVzGAEgAygLMhguY29sbGVjdGlvbnMubmFtZV9vYmplY3RSBW5hbWVzIogBChZzZXRfbWV0YWRhdGFfYXJndW1lbnRzEiAKDHRsYV9taW50X2ZlZRgBIAEoBFIKdGxhTWludEZlZRIwChFrYXBfdG9rZW5fYWRkcmVzcxgCIAEoDEIEgLUYBVIPa2FwVG9rZW5BZGRyZXNzEhoKBW93bmVyGAMgASgMQgSAtRgFUgVvd25lciIYChZnZXRfbWV0YWRhdGFfYXJndW1lbnRzIkMKCm1pbnRfZXZlbnQSFAoCdG8YASABKAxCBIC1GAZSAnRvEh8KCHRva2VuX2lkGAIgASgMQgSAtRgCUgd0b2tlbklkIkcKCmJ1cm5fZXZlbnQSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIfCgh0b2tlbl9pZBgCIAEoDEIEgLUYAlIHdG9rZW5JZCJhCg50cmFuc2Zlcl9ldmVudBIYCgRmcm9tGAEgASgMQgSAtRgGUgRmcm9tEhQKAnRvGAIgASgMQgSAtRgGUgJ0bxIfCgh0b2tlbl9pZBgDIAEoDEIEgLUYAlIHdG9rZW5JZCKXAQoXb3BlcmF0b3JfYXBwcm92YWxfZXZlbnQSLwoQYXBwcm92ZXJfYWRkcmVzcxgBIAEoDEIEgLUYBlIPYXBwcm92ZXJBZGRyZXNzEi8KEG9wZXJhdG9yX2FkZHJlc3MYAiABKAxCBIC1GAZSD29wZXJhdG9yQWRkcmVzcxIaCghhcHByb3ZlZBgDIAEoCFIIYXBwcm92ZWQifgoUdG9rZW5fYXBwcm92YWxfZXZlbnQSLwoQYXBwcm92ZXJfYWRkcmVzcxgBIAEoDEIEgLUYBlIPYXBwcm92ZXJBZGRyZXNzEhQKAnRvGAIgASgMQgSAtRgGUgJ0bxIfCgh0b2tlbl9pZBgDIAEoDEIEgLUYAlIHdG9rZW5JZCIOCgxlbXB0eV9vYmplY3QiJQoNc3RyaW5nX29iamVjdBIUCgV2YWx1ZRgBIAEoCVIFdmFsdWUiKQoNdWludDY0X29iamVjdBIYCgV2YWx1ZRgBIAEoBEICMAFSBXZhbHVlIiMKC2Jvb2xfb2JqZWN0EhQKBXZhbHVlGAEgASgIUgV2YWx1ZSIyChRieXRlc19hZGRyZXNzX29iamVjdBIaCgV2YWx1ZRgBIAEoDEIEgLUYBlIFdmFsdWUiTAoOcm95YWx0eV9vYmplY3QSGgoGYW1vdW50GAEgASgEQgIwAVIGYW1vdW50Eh4KB2FkZHJlc3MYAiABKAxCBIC1GAZSB2FkZHJlc3MiNwoVdG9rZW5fYXBwcm92YWxfb2JqZWN0Eh4KB2FkZHJlc3MYASABKAxCBIC1GAZSB2FkZHJlc3MiWwoVb3BlcmF0b3JfYXBwcm92YWxfa2V5EiAKCGFwcHJvdmVyGAEgASgMQgSAtRgGUghhcHByb3ZlchIgCghvcGVyYXRvchgCIAEoDEIEgLUYBlIIb3BlcmF0b3IiNgoYb3BlcmF0b3JfYXBwcm92YWxfb2JqZWN0EhoKCGFwcHJvdmVkGAEgASgIUghhcHByb3ZlZCKBAQoPbWV0YWRhdGFfb2JqZWN0EiAKDHRsYV9taW50X2ZlZRgBIAEoBFIKdGxhTWludEZlZRIwChFrYXBfdG9rZW5fYWRkcmVzcxgCIAEoDEIEgLUYBVIPa2FwVG9rZW5BZGRyZXNzEhoKBW93bmVyGAMgASgMQgSAtRgFUgVvd25lciKDAgoLbmFtZV9vYmplY3QSFgoGZG9tYWluGAEgASgJUgZkb21haW4SEgoEbmFtZRgCIAEoCVIEbmFtZRIaCgVvd25lchgDIAEoDEIEgLUYBlIFb3duZXISIgoKZXhwaXJhdGlvbhgEIAEoBEICMAFSCmV4cGlyYXRpb24SLAoQZ3JhY2VfcGVyaW9kX2VuZBgFIAEoBEICMAFSDmdyYWNlUGVyaW9kRW5kEioKD3N1Yl9uYW1lc19jb3VudBgGIAEoBEICMAFSDXN1Yk5hbWVzQ291bnQSLgoRbG9ja2VkX2thcF90b2tlbnMYByABKARCAjABUg9sb2NrZWRLYXBUb2tlbnMiMQoOYWRkcmVzc19vYmplY3QSHwoLbmFtZXNfY291bnQYASABKARSCm5hbWVzQ291bnQiSgoPb3duZXJfaW5kZXhfa2V5EhoKBW93bmVyGAEgASgMQgSAtRgGUgVvd25lchIbCgluYW1lX2hhc2gYAiABKAxSCG5hbWVIYXNoIpACChNhdXRob3JpemVfbWludF9hcmdzEhIKBG5hbWUYASABKAlSBG5hbWUSFgoGZG9tYWluGAIgASgJUgZkb21haW4SLwoTZHVyYXRpb25faW5jcmVtZW50cxgDIAEoDVISZHVyYXRpb25JbmNyZW1lbnRzEhoKBW93bmVyGAQgASgMQgSAtRgGUgVvd25lchInCgxwYXltZW50X2Zyb20YBSABKAxCBIC1GAZSC3BheW1lbnRGcm9tEjgKFXBheW1lbnRfdG9rZW5fYWRkcmVzcxgGIAEoDEIEgLUYBVITcGF5bWVudFRva2VuQWRkcmVzcxIdCgpwcm9tb19jb2RlGAcgASgJUglwcm9tb0NvZGUiXgoSYXV0aG9yaXplX21pbnRfcmVzEh4KCmV4cGlyYXRpb24YASABKARSCmV4cGlyYXRpb24SKAoQZ3JhY2VfcGVyaW9kX2VuZBgCIAEoBFIOZ3JhY2VQZXJpb2RFbmQiQwoTYXV0aG9yaXplX2J1cm5fYXJncxIsCgRuYW1lGAEgASgLMhguY29sbGVjdGlvbnMubmFtZV9vYmplY3RSBG5hbWUiNAoSYXV0aG9yaXplX2J1cm5fcmVzEh4KCmF1dGhvcml6ZWQYASABKAhSCmF1dGhvcml6ZWQi2gEKFmF1dGhvcml6ZV9yZW5ld2FsX2FyZ3MSLAoEbmFtZRgBIAEoCzIYLmNvbGxlY3Rpb25zLm5hbWVfb2JqZWN0UgRuYW1lEi8KE2R1cmF0aW9uX2luY3JlbWVudHMYAiABKA1SEmR1cmF0aW9uSW5jcmVtZW50cxInCgxwYXltZW50X2Zyb20YAyABKAxCBIC1GAZSC3BheW1lbnRGcm9tEjgKFXBheW1lbnRfdG9rZW5fYWRkcmVzcxgEIAEoDEIEgLUYBVITcGF5bWVudFRva2VuQWRkcmVzcyJhChVhdXRob3JpemVfcmVuZXdhbF9yZXMSHgoKZXhwaXJhdGlvbhgBIAEoBFIKZXhwaXJhdGlvbhIoChBncmFjZV9wZXJpb2RfZW5kGAIgASgEUg5ncmFjZVBlcmlvZEVuZCJGChZhdXRob3JpemVfcmVjbGFpbV9hcmdzEiwKBG5hbWUYASABKAsyGC5jb2xsZWN0aW9ucy5uYW1lX29iamVjdFIEbmFtZSI3ChVhdXRob3JpemVfcmVjbGFpbV9yZXMSHgoKYXV0aG9yaXplZBgBIAEoCFIKYXV0aG9yaXplZGIGcHJvdG8zCucDChxrb2lub3MvY2hhaW4vYXV0aG9yaXR5LnByb3RvEgxrb2lub3MuY2hhaW4aFGtvaW5vcy9vcHRpb25zLnByb3RvIlUKC2NhbGxfdGFyZ2V0EiUKC2NvbnRyYWN0X2lkGAEgASgMQgSAtRgGUgpjb250cmFjdElkEh8KC2VudHJ5X3BvaW50GAIgASgNUgplbnRyeVBvaW50IogBChNhdXRob3JpemVfYXJndW1lbnRzEjQKBHR5cGUYASABKA4yIC5rb2lub3MuY2hhaW4uYXV0aG9yaXphdGlvbl90eXBlUgR0eXBlEjIKBGNhbGwYAiABKAsyGS5rb2lub3MuY2hhaW4uY2FsbF90YXJnZXRIAFIEY2FsbIgBAUIHCgVfY2FsbCIoChBhdXRob3JpemVfcmVzdWx0EhQKBXZhbHVlGAEgASgIUgV2YWx1ZSpZChJhdXRob3JpemF0aW9uX3R5cGUSEQoNY29udHJhY3RfY2FsbBAAEhsKF3RyYW5zYWN0aW9uX2FwcGxpY2F0aW9uEAESEwoPY29udHJhY3RfdXBsb2FkEAJCNFoyZ2l0aHViLmNvbS9rb2lub3Mva29pbm9zLXByb3RvLWdvbGFuZy9rb2lub3MvY2hhaW5iBnByb3RvMw=="
}